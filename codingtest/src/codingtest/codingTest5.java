package codingtest;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Scanner;
import java.util.StringTokenizer;

public class codingTest5 {
//	문제
//	안녕
//	세준이는 성형수술을 한 후에 병원에 너무 오래 입원해 있었다. 이제 세준이가 병원에 입원한 동안 자기를 생각해준 사람들에게 감사하다고 말할 차례이다.
//
//	세준이를 생각해준 사람은 총 N명이 있다. 사람의 번호는 1번부터 N번까지 있다. 세준이가 i번 사람에게 인사를 하면 L[i]만큼의 체력을 잃고, J[i]만큼의 기쁨을 얻는다. 세준이는 각각의 사람에게 최대 1번만 말할 수 있다.
//
//	세준이의 목표는 주어진 체력내에서 최대한의 기쁨을 느끼는 것이다. 세준이의 체력은 100이고, 기쁨은 0이다. 만약 세준이의 체력이 0이나 음수가 되면, 죽어서 아무런 기쁨을 못 느낀 것이 된다. 세준이가 얻을 수 있는 최대 기쁨을 출력하는 프로그램을 작성하시오.
//
//	입력
//	첫째 줄에 사람의 수 N(≤ 20)이 들어온다. 둘째 줄에는 각각의 사람에게 인사를 할 때, 잃는 체력이 1번 사람부터 순서대로 들어오고, 셋째 줄에는 각각의 사람에게 인사를 할 때, 얻는 기쁨이 1번 사람부터 순서대로 들어온다. 체력과 기쁨은 100보다 작거나 같은 자연수 또는 0이다.
//
//	출력
//	첫째 줄에 세준이가 얻을 수 있는 최대 기쁨을 출력한다.
//
//	예제 입력 1 
//	3
//	1 21 79
//	20 30 25
//	예제 출력 1 
//	50
	
	static final Scanner sc = new Scanner(System.in);
	static int n; // 사람의 수
	static int[] health;// 체력 잃는 수
	static int[] pleasure;// 기쁨 얻는 수
	public static void main(String[] args) throws NumberFormatException, IOException {
		n = sc.nextInt();
		health = new int[n];
		pleasure = new int[n];
	
		for(int i = 0; i<n; i++) {
			health[i] = sc.nextInt();
		}//for
		for(int i = 0; i<n; i++) {
			pleasure[i] = sc.nextInt();
		}//for
		System.out.println(go(0,0,0));
	}
	
	//재귀를 이용하여 계속 다음 값과 비교하도록 구현
	public static int go(int index, int now_life, int sum) {
		if(now_life >= 100) {
			return 0;
		}
		if(index == n) {
			return sum;
		}
		int answer = 0;
		
		answer = Math.max(answer, go(index+1,now_life+health[index], sum+pleasure[index]));//현재 인덱스 위치 값 더한거와 answer의 최대값 고르기
		
		answer = Math.max(answer, go(index+1, now_life, sum));//현재 인덱스 위치 값 안더하고 패스한거랑 answer의 최대값
		return answer;
	}

}
